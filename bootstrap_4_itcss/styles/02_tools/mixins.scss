/*
 ** Custom mixins
 ** -----------------------------------------------------------------------------*/

/*
 ** Set rules only for defined breakpoint name
 **
 ** @access public
 ** @param {breakpoint name} $breakpoint - Available breakpoint map
 **/

@mixin respond-to($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) and map-has-key($grid-breakpoints-max, $breakpoint) {
    @media (min-width: #{map-get($grid-breakpoints, $breakpoint)}) and (max-width: #{map-get($grid-breakpoints-max, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$grid-breakpoints` and `$grid-breakpoints-max` map.";
  }
}


/*
 ** Set rules from defined breakpoint name
 **
 ** @access public
 ** @param {breakpoint name} $breakpoint - Available breakpoint map
 **/
@mixin respond-to-min($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    @media (min-width: #{map-get($grid-breakpoints, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$grid-breakpoints` map.";
  }
}

/*
 ** Set rules up to defined breakpoint name
 **
 ** @access public
 ** @param {breakpoint name} $breakpoint - Available breakpoint map
 **/
@mixin respond-to-max($breakpoint) {
  @if map-has-key($grid-breakpoints-max, $breakpoint) {
    @media (max-width: #{map-get($grid-breakpoints-max, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$grid-breakpoints-max` map.";
  }
}

/*
 ** Generate specified class for all breakpoints
 **
 ** @access public
 **/
@mixin iterate-breakpoints() {
  @each $bpName, $bpPixels in $grid-breakpoints {

    // @media min-width
    &-#{$bpName} {
      @include respond-to-min($bpName) {
        @content;
      }
    }

    // @media max-width
    &-#{$bpName}-max{
      @include respond-to-max($bpName) {
        @content;
      }
    }

    &-#{$bpName}-only{
      @include respond-to($bpName) {
        @content;
      }
    }
  }
}